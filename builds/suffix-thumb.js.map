{"version":3,"file":"suffix-thumb.js","sources":["../src/01-getAll.js","../src/02-findBest.js","../src/03-rank.js","../src/04-compress.js","../src/05-format.js","../src/index.js"],"sourcesContent":["const getSuffixes = function (str) {\n  let list = []\n  for (let i = 4; i >= 0; i -= 1) {\n    if (str.length - 1 <= i) {\n      continue\n    }\n    let suffix = str.substr(str.length - i - 1, str.length - 1)\n    list.push(suffix)\n  }\n  return list\n}\n\nconst getAll = function (arr) {\n  const suffixes = {}\n  arr.forEach((a) => {\n    let [from, to] = a\n    let fromList = getSuffixes(from)\n    fromList.push('') //add a prepend-only option\n    fromList.forEach((left) => {\n      suffixes[left] = suffixes[left] || {}\n      let toList = getSuffixes(to)\n      toList.forEach((right) => {\n        suffixes[left][right] = suffixes[left][right] || 0\n        suffixes[left][right] += 1\n      })\n    })\n  })\n  return suffixes\n}\n\nmodule.exports = getAll\n","const topChange = function (obj, from) {\n  let keys = Object.keys(obj)\n  let arr = keys.map((to) => {\n    return {\n      from: from,\n      to: to,\n      yes: obj[to],\n    }\n  })\n  arr = arr.sort((a, b) => {\n    if (a.yes > b.yes) {\n      return -1\n    } else if (a.yes < b.yes) {\n      return 1\n    }\n    return 0\n  })\n  return arr\n}\n\nconst findBest = function (suffixes) {\n  let good = []\n  Object.keys(suffixes).forEach((left) => {\n    let top = topChange(suffixes[left], left)\n    if (top[0] && top[0].yes > 1) {\n      good.push(top[0])\n    }\n  })\n  good = good.sort((a, b) => {\n    if (a.yes > b.yes) {\n      return -1\n    } else if (a.yes < b.yes) {\n      return 1\n    }\n    return 0\n  })\n  return good\n}\n\nmodule.exports = findBest\n","const getScores = function (arr, pairs) {\n  return arr.map((obj) => {\n    let yes = 0\n    let no = 0\n    let exceptions = {}\n    pairs.forEach((pair) => {\n      if (pair[0].endsWith(obj.from)) {\n        let reg = new RegExp(obj.from + '$')\n        let have = pair[0].replace(reg, obj.to)\n        if (have === pair[1]) {\n          yes += 1\n        } else {\n          no += 1\n          exceptions[pair[0]] = pair[1]\n        }\n      }\n    })\n    return {\n      from: obj.from,\n      to: obj.to,\n      yes: yes,\n      no: no,\n      percent: yes / (yes + no),\n      exceptions: exceptions,\n    }\n  })\n}\n\nconst rank = function (arr, pairs) {\n  let scored = getScores(arr, pairs)\n  scored = scored.filter((o) => {\n    return o.yes > 1 && o.yes > o.no\n  })\n  scored = scored.sort((a, b) => {\n    if (a.yes > b.yes) {\n      return -1\n    } else if (a.yes < b.yes) {\n      return 1\n    }\n    return 0\n  })\n  return scored\n}\nmodule.exports = rank\n","const compress = function (arr) {\n  let redundant = {}\n  // remove any redundant downstream\n  arr.forEach((o, i) => {\n    let downstream = arr.slice(i + 1, arr.length)\n    downstream.forEach((d) => {\n      if (d.from.endsWith(o.from)) {\n        // console.log(o.from + '  #' + i + '  ->    #' + k + ' ' + d.from)\n        redundant[d.from] = true\n      }\n    })\n  })\n  // actually remove any redundant suffixes\n  arr = arr.filter((o) => {\n    return redundant.hasOwnProperty(o.from) === false\n  })\n  return arr\n}\nmodule.exports = compress\n","function reverse(str) {\n  return str.split('').reverse().join('')\n}\n\nconst fmtRules = function (rules) {\n  // sort by length, then by suffix\n  rules = rules.sort((a, b) => {\n    if (a.from.length > b.from.length) {\n      return -1\n    } else if (a.from.length < b.from.length) {\n      return 1\n    }\n    a = reverse(a.from)\n    b = reverse(b.from)\n    if (a > b) {\n      return 1\n    } else if (a < b) {\n      return -1\n    }\n    return 0\n  })\n  return rules.map((o) => [o.from, o.to, o.yes])\n}\n\nconst format = function (rules, pairs) {\n  let exceptions = {}\n  rules.forEach((rule) => {\n    Object.assign(exceptions, rule.exceptions)\n  })\n  // find remaining pairs with no rule\n  let untouched = pairs.filter((pair) => {\n    if (exceptions.hasOwnProperty(pair[0])) {\n      return false\n    }\n    // console.log(rules.find((rule) => pair[0].endsWith(rule.from)))\n    if (rules.find((rule) => pair[0].endsWith(rule.from))) {\n      return false\n    }\n    return true\n  })\n  let coverage = pairs.length - untouched.length\n  let percent = coverage / pairs.length\n  return {\n    rules: fmtRules(rules),\n    exceptions: exceptions,\n    coverage: percent,\n    remaining: untouched,\n  }\n}\nmodule.exports = format\n","const produce = require('./01-getAll')\nconst findBest = require('./02-findBest')\nconst rank = require('./03-rank')\nconst compress = require('./04-compress')\nconst format = require('./05-format')\n\nconst thumb = function (pairs) {\n  // look at all patterns\n  const suffixes = produce(pairs)\n  // look for the greatest patterns\n  let best = findBest(suffixes)\n  // run pattern against the pairs\n  let rules = rank(best, pairs)\n  // remove duplicates\n  rules = compress(rules)\n  // nice result format\n  return format(rules, pairs)\n}\nmodule.exports = thumb\n"],"names":["getSuffixes","str","list","i","length","suffix","substr","push","getAll","arr","suffixes","forEach","a","from","to","fromList","left","toList","right","topChange","obj","keys","Object","map","yes","sort","b","findBest","good","top","getScores","pairs","no","exceptions","pair","endsWith","reg","RegExp","have","replace","percent","rank","scored","filter","o","compress","redundant","downstream","slice","d","hasOwnProperty","reverse","split","join","fmtRules","rules","format","rule","assign","untouched","find","coverage","remaining","thumb","produce","best"],"mappings":"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"}